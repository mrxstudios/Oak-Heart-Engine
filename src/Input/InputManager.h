#pragma once

#include <algorithm>
#include <unordered_map>
#include <SDL3/SDL.h>

class InputManager {
private:
    bool quit = false;
    bool keyState[SDL_NUM_SCANCODES];
    bool prevKeyState[SDL_NUM_SCANCODES];
    bool keyPressedHandledState[SDL_NUM_SCANCODES];
    bool keyReleasedHandledState[SDL_NUM_SCANCODES];
    
    bool mouseButtonState[5];
    bool mouseHandledState[5];
    SDL_Point mousePosition;

public:
    InputManager();

    void PollEvents();
    bool IsQuitRequested() const;
    bool IsKeyDown(SDL_Scancode key) const;
    bool IsKeyPressed(SDL_Scancode key);
    bool IsKeyReleased(SDL_Scancode key);

    bool IsMouseButtonPressed(Uint8 button, bool handle);
    SDL_Point GetMousePosition();

    // MOUSE PRESSED
    bool IsPressed_LeftMouse() { return mouseButtonState[SDL_BUTTON_LEFT]; }
    bool IsPressed_RightMouse() { return mouseButtonState[SDL_BUTTON_RIGHT]; }

    // KEYBOARD PRESSED
    bool IsPressed_A() { return IsKeyPressed(SDL_SCANCODE_A); }
    bool IsPressed_B() { return IsKeyPressed(SDL_SCANCODE_B); }
    bool IsPressed_C() { return IsKeyPressed(SDL_SCANCODE_C); }
    bool IsPressed_D() { return IsKeyPressed(SDL_SCANCODE_D); }
    bool IsPressed_E() { return IsKeyPressed(SDL_SCANCODE_E); }
    bool IsPressed_F() { return IsKeyPressed(SDL_SCANCODE_F); }
    bool IsPressed_G() { return IsKeyPressed(SDL_SCANCODE_G); }
    bool IsPressed_H() { return IsKeyPressed(SDL_SCANCODE_H); }
    bool IsPressed_I() { return IsKeyPressed(SDL_SCANCODE_I); }
    bool IsPressed_J() { return IsKeyPressed(SDL_SCANCODE_J); }
    bool IsPressed_K() { return IsKeyPressed(SDL_SCANCODE_K); }
    bool IsPressed_L() { return IsKeyPressed(SDL_SCANCODE_L); }
    bool IsPressed_M() { return IsKeyPressed(SDL_SCANCODE_M); }
    bool IsPressed_N() { return IsKeyPressed(SDL_SCANCODE_N); }
    bool IsPressed_O() { return IsKeyPressed(SDL_SCANCODE_O); }
    bool IsPressed_P() { return IsKeyPressed(SDL_SCANCODE_P); }
    bool IsPressed_Q() { return IsKeyPressed(SDL_SCANCODE_Q); }
    bool IsPressed_R() { return IsKeyPressed(SDL_SCANCODE_R); }
    bool IsPressed_S() { return IsKeyPressed(SDL_SCANCODE_S); }
    bool IsPressed_T() { return IsKeyPressed(SDL_SCANCODE_T); }
    bool IsPressed_U() { return IsKeyPressed(SDL_SCANCODE_U); }
    bool IsPressed_V() { return IsKeyPressed(SDL_SCANCODE_V); }
    bool IsPressed_W() { return IsKeyPressed(SDL_SCANCODE_W); }
    bool IsPressed_X() { return IsKeyPressed(SDL_SCANCODE_X); }
    bool IsPressed_Y() { return IsKeyPressed(SDL_SCANCODE_Y); }
    bool IsPressed_Z() { return IsKeyPressed(SDL_SCANCODE_Z); }
    bool IsPressed_1() { return IsKeyPressed(SDL_SCANCODE_1); }
    bool IsPressed_2() { return IsKeyPressed(SDL_SCANCODE_2); }
    bool IsPressed_3() { return IsKeyPressed(SDL_SCANCODE_3); }
    bool IsPressed_4() { return IsKeyPressed(SDL_SCANCODE_4); }
    bool IsPressed_5() { return IsKeyPressed(SDL_SCANCODE_5); }
    bool IsPressed_6() { return IsKeyPressed(SDL_SCANCODE_6); }
    bool IsPressed_7() { return IsKeyPressed(SDL_SCANCODE_7); }
    bool IsPressed_8() { return IsKeyPressed(SDL_SCANCODE_8); }
    bool IsPressed_9() { return IsKeyPressed(SDL_SCANCODE_9); }
    bool IsPressed_0() { return IsKeyPressed(SDL_SCANCODE_0); }
    bool IsPressed_Return() { return IsKeyPressed(SDL_SCANCODE_RETURN); }
    bool IsPressed_Escape() { return IsKeyPressed(SDL_SCANCODE_ESCAPE); }
    bool IsPressed_Backspace() { return IsKeyPressed(SDL_SCANCODE_BACKSPACE); }
    bool IsPressed_Tab() { return IsKeyPressed(SDL_SCANCODE_TAB); }
    bool IsPressed_Space() { return IsKeyPressed(SDL_SCANCODE_SPACE); }
    bool IsPressed_Minus() { return IsKeyPressed(SDL_SCANCODE_MINUS); }
    bool IsPressed_Equals() { return IsKeyPressed(SDL_SCANCODE_EQUALS); }
    bool IsPressed_Leftbracket() { return IsKeyPressed(SDL_SCANCODE_LEFTBRACKET); }
    bool IsPressed_Rightbracket() { return IsKeyPressed(SDL_SCANCODE_RIGHTBRACKET); }
    bool IsPressed_Backslash() { return IsKeyPressed(SDL_SCANCODE_BACKSLASH); }
    bool IsPressed_Nonushash() { return IsKeyPressed(SDL_SCANCODE_NONUSHASH); }
    bool IsPressed_Semicolon() { return IsKeyPressed(SDL_SCANCODE_SEMICOLON); }
    bool IsPressed_Apostrophe() { return IsKeyPressed(SDL_SCANCODE_APOSTROPHE); }
    bool IsPressed_Grave() { return IsKeyPressed(SDL_SCANCODE_GRAVE); }
    bool IsPressed_Comma() { return IsKeyPressed(SDL_SCANCODE_COMMA); }
    bool IsPressed_Period() { return IsKeyPressed(SDL_SCANCODE_PERIOD); }
    bool IsPressed_Slash() { return IsKeyPressed(SDL_SCANCODE_SLASH); }
    bool IsPressed_CapsLock() { return IsKeyPressed(SDL_SCANCODE_CAPSLOCK); }
    bool IsPressed_F1() { return IsKeyPressed(SDL_SCANCODE_F1); }
    bool IsPressed_F2() { return IsKeyPressed(SDL_SCANCODE_F2); }
    bool IsPressed_F3() { return IsKeyPressed(SDL_SCANCODE_F3); }
    bool IsPressed_F4() { return IsKeyPressed(SDL_SCANCODE_F4); }
    bool IsPressed_F5() { return IsKeyPressed(SDL_SCANCODE_F5); }
    bool IsPressed_F6() { return IsKeyPressed(SDL_SCANCODE_F6); }
    bool IsPressed_F7() { return IsKeyPressed(SDL_SCANCODE_F7); }
    bool IsPressed_F8() { return IsKeyPressed(SDL_SCANCODE_F8); }
    bool IsPressed_F9() { return IsKeyPressed(SDL_SCANCODE_F9); }
    bool IsPressed_F10() { return IsKeyPressed(SDL_SCANCODE_F10); }
    bool IsPressed_F11() { return IsKeyPressed(SDL_SCANCODE_F11); }
    bool IsPressed_F12() { return IsKeyPressed(SDL_SCANCODE_F12); }
    bool IsPressed_PrintScreen() { return IsKeyPressed(SDL_SCANCODE_PRINTSCREEN); }
    bool IsPressed_ScrollLock() { return IsKeyPressed(SDL_SCANCODE_SCROLLLOCK); }
    bool IsPressed_Pause() { return IsKeyPressed(SDL_SCANCODE_PAUSE); }
    bool IsPressed_Insert() { return IsKeyPressed(SDL_SCANCODE_INSERT); }
    bool IsPressed_Home() { return IsKeyPressed(SDL_SCANCODE_HOME); }
    bool IsPressed_PageUp() { return IsKeyPressed(SDL_SCANCODE_PAGEUP); }
    bool IsPressed_Delete() { return IsKeyPressed(SDL_SCANCODE_DELETE); }
    bool IsPressed_End() { return IsKeyPressed(SDL_SCANCODE_END); }
    bool IsPressed_PageDown() { return IsKeyPressed(SDL_SCANCODE_PAGEDOWN); }
    bool IsPressed_Right() { return IsKeyPressed(SDL_SCANCODE_RIGHT); }
    bool IsPressed_Left() { return IsKeyPressed(SDL_SCANCODE_LEFT); }
    bool IsPressed_Down() { return IsKeyPressed(SDL_SCANCODE_DOWN); }
    bool IsPressed_Up() { return IsKeyPressed(SDL_SCANCODE_UP); }
    bool IsPressed_NumLock() { return IsKeyPressed(SDL_SCANCODE_NUMLOCKCLEAR); }
    bool IsPressed_Kp_Divide() { return IsKeyPressed(SDL_SCANCODE_KP_DIVIDE); }
    bool IsPressed_Kp_Multiply() { return IsKeyPressed(SDL_SCANCODE_KP_MULTIPLY); }
    bool IsPressed_Kp_Minus() { return IsKeyPressed(SDL_SCANCODE_KP_MINUS); }
    bool IsPressed_Kp_Plus() { return IsKeyPressed(SDL_SCANCODE_KP_PLUS); }
    bool IsPressed_Kp_Enter() { return IsKeyPressed(SDL_SCANCODE_KP_ENTER); }
    bool IsPressed_Kp_1() { return IsKeyPressed(SDL_SCANCODE_KP_1); }
    bool IsPressed_Kp_2() { return IsKeyPressed(SDL_SCANCODE_KP_2); }
    bool IsPressed_Kp_3() { return IsKeyPressed(SDL_SCANCODE_KP_3); }
    bool IsPressed_Kp_4() { return IsKeyPressed(SDL_SCANCODE_KP_4); }
    bool IsPressed_Kp_5() { return IsKeyPressed(SDL_SCANCODE_KP_5); }
    bool IsPressed_Kp_6() { return IsKeyPressed(SDL_SCANCODE_KP_6); }
    bool IsPressed_Kp_7() { return IsKeyPressed(SDL_SCANCODE_KP_7); }
    bool IsPressed_Kp_8() { return IsKeyPressed(SDL_SCANCODE_KP_8); }
    bool IsPressed_Kp_9() { return IsKeyPressed(SDL_SCANCODE_KP_9); }
    bool IsPressed_Kp_0() { return IsKeyPressed(SDL_SCANCODE_KP_0); }
    bool IsPressed_Kp_Period() { return IsKeyPressed(SDL_SCANCODE_KP_PERIOD); }
    bool IsPressed_RBackSlash() { return IsKeyPressed(SDL_SCANCODE_NONUSBACKSLASH); }
    bool IsPressed_Application() { return IsKeyPressed(SDL_SCANCODE_APPLICATION); }
    bool IsPressed_Power() { return IsKeyPressed(SDL_SCANCODE_POWER); }
    bool IsPressed_Kp_Equals() { return IsKeyPressed(SDL_SCANCODE_KP_EQUALS); }
    bool IsPressed_Execute() { return IsKeyPressed(SDL_SCANCODE_EXECUTE); }
    bool IsPressed_Help() { return IsKeyPressed(SDL_SCANCODE_HELP); }
    bool IsPressed_Menu() { return IsKeyPressed(SDL_SCANCODE_MENU); }
    bool IsPressed_Select() { return IsKeyPressed(SDL_SCANCODE_SELECT); }
    bool IsPressed_Stop() { return IsKeyPressed(SDL_SCANCODE_STOP); }
    bool IsPressed_Again() { return IsKeyPressed(SDL_SCANCODE_AGAIN); }
    bool IsPressed_Undo() { return IsKeyPressed(SDL_SCANCODE_UNDO); }
    bool IsPressed_Cut() { return IsKeyPressed(SDL_SCANCODE_CUT); }
    bool IsPressed_Copy() { return IsKeyPressed(SDL_SCANCODE_COPY); }
    bool IsPressed_Paste() { return IsKeyPressed(SDL_SCANCODE_PASTE); }
    bool IsPressed_Find() { return IsKeyPressed(SDL_SCANCODE_FIND); }
    bool IsPressed_Mute() { return IsKeyPressed(SDL_SCANCODE_MUTE); }
    bool IsPressed_VolumeUp() { return IsKeyPressed(SDL_SCANCODE_VOLUMEUP); }
    bool IsPressed_VolumeDown() { return IsKeyPressed(SDL_SCANCODE_VOLUMEDOWN); }
    bool IsPressed_LCtrl() { return IsKeyPressed(SDL_SCANCODE_LCTRL); }
    bool IsPressed_LShift() { return IsKeyPressed(SDL_SCANCODE_LSHIFT); }
    bool IsPressed_LAlt() { return IsKeyPressed(SDL_SCANCODE_LALT); }
    bool IsPressed_LGui() { return IsKeyPressed(SDL_SCANCODE_LGUI); }
    bool IsPressed_RCtrl() { return IsKeyPressed(SDL_SCANCODE_RCTRL); }
    bool IsPressed_RShift() { return IsKeyPressed(SDL_SCANCODE_RSHIFT); }
    bool IsPressed_RAlt() { return IsKeyPressed(SDL_SCANCODE_RALT); }
    bool IsPressed_RGui() { return IsKeyPressed(SDL_SCANCODE_RGUI); }

    // KEYBOARD RELEASED
    bool IsReleased_A() { return IsKeyReleased(SDL_SCANCODE_A); }
    bool IsReleased_B() { return IsKeyReleased(SDL_SCANCODE_B); }
    bool IsReleased_C() { return IsKeyReleased(SDL_SCANCODE_C); }
    bool IsReleased_D() { return IsKeyReleased(SDL_SCANCODE_D); }
    bool IsReleased_E() { return IsKeyReleased(SDL_SCANCODE_E); }
    bool IsReleased_F() { return IsKeyReleased(SDL_SCANCODE_F); }
    bool IsReleased_G() { return IsKeyReleased(SDL_SCANCODE_G); }
    bool IsReleased_H() { return IsKeyReleased(SDL_SCANCODE_H); }
    bool IsReleased_I() { return IsKeyReleased(SDL_SCANCODE_I); }
    bool IsReleased_J() { return IsKeyReleased(SDL_SCANCODE_J); }
    bool IsReleased_K() { return IsKeyReleased(SDL_SCANCODE_K); }
    bool IsReleased_L() { return IsKeyReleased(SDL_SCANCODE_L); }
    bool IsReleased_M() { return IsKeyReleased(SDL_SCANCODE_M); }
    bool IsReleased_N() { return IsKeyReleased(SDL_SCANCODE_N); }
    bool IsReleased_O() { return IsKeyReleased(SDL_SCANCODE_O); }
    bool IsReleased_P() { return IsKeyReleased(SDL_SCANCODE_P); }
    bool IsReleased_Q() { return IsKeyReleased(SDL_SCANCODE_Q); }
    bool IsReleased_R() { return IsKeyReleased(SDL_SCANCODE_R); }
    bool IsReleased_S() { return IsKeyReleased(SDL_SCANCODE_S); }
    bool IsReleased_T() { return IsKeyReleased(SDL_SCANCODE_T); }
    bool IsReleased_U() { return IsKeyReleased(SDL_SCANCODE_U); }
    bool IsReleased_V() { return IsKeyReleased(SDL_SCANCODE_V); }
    bool IsReleased_W() { return IsKeyReleased(SDL_SCANCODE_W); }
    bool IsReleased_X() { return IsKeyReleased(SDL_SCANCODE_X); }
    bool IsReleased_Y() { return IsKeyReleased(SDL_SCANCODE_Y); }
    bool IsReleased_Z() { return IsKeyReleased(SDL_SCANCODE_Z); }
    bool IsReleased_1() { return IsKeyReleased(SDL_SCANCODE_1); }
    bool IsReleased_2() { return IsKeyReleased(SDL_SCANCODE_2); }
    bool IsReleased_3() { return IsKeyReleased(SDL_SCANCODE_3); }
    bool IsReleased_4() { return IsKeyReleased(SDL_SCANCODE_4); }
    bool IsReleased_5() { return IsKeyReleased(SDL_SCANCODE_5); }
    bool IsReleased_6() { return IsKeyReleased(SDL_SCANCODE_6); }
    bool IsReleased_7() { return IsKeyReleased(SDL_SCANCODE_7); }
    bool IsReleased_8() { return IsKeyReleased(SDL_SCANCODE_8); }
    bool IsReleased_9() { return IsKeyReleased(SDL_SCANCODE_9); }
    bool IsReleased_0() { return IsKeyReleased(SDL_SCANCODE_0); }
    bool IsReleased_Return() { return IsKeyReleased(SDL_SCANCODE_RETURN); }
    bool IsReleased_Escape() { return IsKeyReleased(SDL_SCANCODE_ESCAPE); }
    bool IsReleased_Backspace() { return IsKeyReleased(SDL_SCANCODE_BACKSPACE); }
    bool IsReleased_Tab() { return IsKeyReleased(SDL_SCANCODE_TAB); }
    bool IsReleased_Space() { return IsKeyReleased(SDL_SCANCODE_SPACE); }
    bool IsReleased_Minus() { return IsKeyReleased(SDL_SCANCODE_MINUS); }
    bool IsReleased_Equals() { return IsKeyReleased(SDL_SCANCODE_EQUALS); }
    bool IsReleased_Leftbracket() { return IsKeyReleased(SDL_SCANCODE_LEFTBRACKET); }
    bool IsReleased_Rightbracket() { return IsKeyReleased(SDL_SCANCODE_RIGHTBRACKET); }
    bool IsReleased_Backslash() { return IsKeyReleased(SDL_SCANCODE_BACKSLASH); }
    bool IsReleased_Nonushash() { return IsKeyReleased(SDL_SCANCODE_NONUSHASH); }
    bool IsReleased_Semicolon() { return IsKeyReleased(SDL_SCANCODE_SEMICOLON); }
    bool IsReleased_Apostrophe() { return IsKeyReleased(SDL_SCANCODE_APOSTROPHE); }
    bool IsReleased_Grave() { return IsKeyReleased(SDL_SCANCODE_GRAVE); }
    bool IsReleased_Comma() { return IsKeyReleased(SDL_SCANCODE_COMMA); }
    bool IsReleased_Period() { return IsKeyReleased(SDL_SCANCODE_PERIOD); }
    bool IsReleased_Slash() { return IsKeyReleased(SDL_SCANCODE_SLASH); }
    bool IsReleased_CapsLock() { return IsKeyReleased(SDL_SCANCODE_CAPSLOCK); }
    bool IsReleased_F1() { return IsKeyReleased(SDL_SCANCODE_F1); }
    bool IsReleased_F2() { return IsKeyReleased(SDL_SCANCODE_F2); }
    bool IsReleased_F3() { return IsKeyReleased(SDL_SCANCODE_F3); }
    bool IsReleased_F4() { return IsKeyReleased(SDL_SCANCODE_F4); }
    bool IsReleased_F5() { return IsKeyReleased(SDL_SCANCODE_F5); }
    bool IsReleased_F6() { return IsKeyReleased(SDL_SCANCODE_F6); }
    bool IsReleased_F7() { return IsKeyReleased(SDL_SCANCODE_F7); }
    bool IsReleased_F8() { return IsKeyReleased(SDL_SCANCODE_F8); }
    bool IsReleased_F9() { return IsKeyReleased(SDL_SCANCODE_F9); }
    bool IsReleased_F10() { return IsKeyReleased(SDL_SCANCODE_F10); }
    bool IsReleased_F11() { return IsKeyReleased(SDL_SCANCODE_F11); }
    bool IsReleased_F12() { return IsKeyReleased(SDL_SCANCODE_F12); }
    bool IsReleased_PrintScreen() { return IsKeyReleased(SDL_SCANCODE_PRINTSCREEN); }
    bool IsReleased_ScrollLock() { return IsKeyReleased(SDL_SCANCODE_SCROLLLOCK); }
    bool IsReleased_Pause() { return IsKeyReleased(SDL_SCANCODE_PAUSE); }
    bool IsReleased_Insert() { return IsKeyReleased(SDL_SCANCODE_INSERT); }
    bool IsReleased_Home() { return IsKeyReleased(SDL_SCANCODE_HOME); }
    bool IsReleased_PageUp() { return IsKeyReleased(SDL_SCANCODE_PAGEUP); }
    bool IsReleased_Delete() { return IsKeyReleased(SDL_SCANCODE_DELETE); }
    bool IsReleased_End() { return IsKeyReleased(SDL_SCANCODE_END); }
    bool IsReleased_PageDown() { return IsKeyReleased(SDL_SCANCODE_PAGEDOWN); }
    bool IsReleased_Right() { return IsKeyReleased(SDL_SCANCODE_RIGHT); }
    bool IsReleased_Left() { return IsKeyReleased(SDL_SCANCODE_LEFT); }
    bool IsReleased_Down() { return IsKeyReleased(SDL_SCANCODE_DOWN); }
    bool IsReleased_Up() { return IsKeyReleased(SDL_SCANCODE_UP); }
    bool IsReleased_NumLock() { return IsKeyReleased(SDL_SCANCODE_NUMLOCKCLEAR); }
    bool IsReleased_Kp_Divide() { return IsKeyReleased(SDL_SCANCODE_KP_DIVIDE); }
    bool IsReleased_Kp_Multiply() { return IsKeyReleased(SDL_SCANCODE_KP_MULTIPLY); }
    bool IsReleased_Kp_Minus() { return IsKeyReleased(SDL_SCANCODE_KP_MINUS); }
    bool IsReleased_Kp_Plus() { return IsKeyReleased(SDL_SCANCODE_KP_PLUS); }
    bool IsReleased_Kp_Enter() { return IsKeyReleased(SDL_SCANCODE_KP_ENTER); }
    bool IsReleased_Kp_1() { return IsKeyReleased(SDL_SCANCODE_KP_1); }
    bool IsReleased_Kp_2() { return IsKeyReleased(SDL_SCANCODE_KP_2); }
    bool IsReleased_Kp_3() { return IsKeyReleased(SDL_SCANCODE_KP_3); }
    bool IsReleased_Kp_4() { return IsKeyReleased(SDL_SCANCODE_KP_4); }
    bool IsReleased_Kp_5() { return IsKeyReleased(SDL_SCANCODE_KP_5); }
    bool IsReleased_Kp_6() { return IsKeyReleased(SDL_SCANCODE_KP_6); }
    bool IsReleased_Kp_7() { return IsKeyReleased(SDL_SCANCODE_KP_7); }
    bool IsReleased_Kp_8() { return IsKeyReleased(SDL_SCANCODE_KP_8); }
    bool IsReleased_Kp_9() { return IsKeyReleased(SDL_SCANCODE_KP_9); }
    bool IsReleased_Kp_0() { return IsKeyReleased(SDL_SCANCODE_KP_0); }
    bool IsReleased_Kp_Period() { return IsKeyReleased(SDL_SCANCODE_KP_PERIOD); }
    bool IsReleased_RBackSlash() { return IsKeyReleased(SDL_SCANCODE_NONUSBACKSLASH); }
    bool IsReleased_Application() { return IsKeyReleased(SDL_SCANCODE_APPLICATION); }
    bool IsReleased_Power() { return IsKeyReleased(SDL_SCANCODE_POWER); }
    bool IsReleased_Kp_Equals() { return IsKeyReleased(SDL_SCANCODE_KP_EQUALS); }
    bool IsReleased_Execute() { return IsKeyReleased(SDL_SCANCODE_EXECUTE); }
    bool IsReleased_Help() { return IsKeyReleased(SDL_SCANCODE_HELP); }
    bool IsReleased_Menu() { return IsKeyReleased(SDL_SCANCODE_MENU); }
    bool IsReleased_Select() { return IsKeyReleased(SDL_SCANCODE_SELECT); }
    bool IsReleased_Stop() { return IsKeyReleased(SDL_SCANCODE_STOP); }
    bool IsReleased_Again() { return IsKeyReleased(SDL_SCANCODE_AGAIN); }
    bool IsReleased_Undo() { return IsKeyReleased(SDL_SCANCODE_UNDO); }
    bool IsReleased_Cut() { return IsKeyReleased(SDL_SCANCODE_CUT); }
    bool IsReleased_Copy() { return IsKeyReleased(SDL_SCANCODE_COPY); }
    bool IsReleased_Paste() { return IsKeyReleased(SDL_SCANCODE_PASTE); }
    bool IsReleased_Find() { return IsKeyReleased(SDL_SCANCODE_FIND); }
    bool IsReleased_Mute() { return IsKeyReleased(SDL_SCANCODE_MUTE); }
    bool IsReleased_VolumeUp() { return IsKeyReleased(SDL_SCANCODE_VOLUMEUP); }
    bool IsReleased_VolumeDown() { return IsKeyReleased(SDL_SCANCODE_VOLUMEDOWN); }
    bool IsReleased_LCtrl() { return IsKeyReleased(SDL_SCANCODE_LCTRL); }
    bool IsReleased_LShift() { return IsKeyReleased(SDL_SCANCODE_LSHIFT); }
    bool IsReleased_LAlt() { return IsKeyReleased(SDL_SCANCODE_LALT); }
    bool IsReleased_LGui() { return IsKeyReleased(SDL_SCANCODE_LGUI); }
    bool IsReleased_RCtrl() { return IsKeyReleased(SDL_SCANCODE_RCTRL); }
    bool IsReleased_RShift() { return IsKeyReleased(SDL_SCANCODE_RSHIFT); }
    bool IsReleased_RAlt() { return IsKeyReleased(SDL_SCANCODE_RALT); }
    bool IsReleased_RGui() { return IsKeyReleased(SDL_SCANCODE_RGUI); }

    // KEYBOARD Down
    bool IsDown_A() { return IsKeyDown(SDL_SCANCODE_A); }
    bool IsDown_B() { return IsKeyDown(SDL_SCANCODE_B); }
    bool IsDown_C() { return IsKeyDown(SDL_SCANCODE_C); }
    bool IsDown_D() { return IsKeyDown(SDL_SCANCODE_D); }
    bool IsDown_E() { return IsKeyDown(SDL_SCANCODE_E); }
    bool IsDown_F() { return IsKeyDown(SDL_SCANCODE_F); }
    bool IsDown_G() { return IsKeyDown(SDL_SCANCODE_G); }
    bool IsDown_H() { return IsKeyDown(SDL_SCANCODE_H); }
    bool IsDown_I() { return IsKeyDown(SDL_SCANCODE_I); }
    bool IsDown_J() { return IsKeyDown(SDL_SCANCODE_J); }
    bool IsDown_K() { return IsKeyDown(SDL_SCANCODE_K); }
    bool IsDown_L() { return IsKeyDown(SDL_SCANCODE_L); }
    bool IsDown_M() { return IsKeyDown(SDL_SCANCODE_M); }
    bool IsDown_N() { return IsKeyDown(SDL_SCANCODE_N); }
    bool IsDown_O() { return IsKeyDown(SDL_SCANCODE_O); }
    bool IsDown_P() { return IsKeyDown(SDL_SCANCODE_P); }
    bool IsDown_Q() { return IsKeyDown(SDL_SCANCODE_Q); }
    bool IsDown_R() { return IsKeyDown(SDL_SCANCODE_R); }
    bool IsDown_S() { return IsKeyDown(SDL_SCANCODE_S); }
    bool IsDown_T() { return IsKeyDown(SDL_SCANCODE_T); }
    bool IsDown_U() { return IsKeyDown(SDL_SCANCODE_U); }
    bool IsDown_V() { return IsKeyDown(SDL_SCANCODE_V); }
    bool IsDown_W() { return IsKeyDown(SDL_SCANCODE_W); }
    bool IsDown_X() { return IsKeyDown(SDL_SCANCODE_X); }
    bool IsDown_Y() { return IsKeyDown(SDL_SCANCODE_Y); }
    bool IsDown_Z() { return IsKeyDown(SDL_SCANCODE_Z); }
    bool IsDown_1() { return IsKeyDown(SDL_SCANCODE_1); }
    bool IsDown_2() { return IsKeyDown(SDL_SCANCODE_2); }
    bool IsDown_3() { return IsKeyDown(SDL_SCANCODE_3); }
    bool IsDown_4() { return IsKeyDown(SDL_SCANCODE_4); }
    bool IsDown_5() { return IsKeyDown(SDL_SCANCODE_5); }
    bool IsDown_6() { return IsKeyDown(SDL_SCANCODE_6); }
    bool IsDown_7() { return IsKeyDown(SDL_SCANCODE_7); }
    bool IsDown_8() { return IsKeyDown(SDL_SCANCODE_8); }
    bool IsDown_9() { return IsKeyDown(SDL_SCANCODE_9); }
    bool IsDown_0() { return IsKeyDown(SDL_SCANCODE_0); }
    bool IsDown_Return() { return IsKeyDown(SDL_SCANCODE_RETURN); }
    bool IsDown_Escape() { return IsKeyDown(SDL_SCANCODE_ESCAPE); }
    bool IsDown_Backspace() { return IsKeyDown(SDL_SCANCODE_BACKSPACE); }
    bool IsDown_Tab() { return IsKeyDown(SDL_SCANCODE_TAB); }
    bool IsDown_Space() { return IsKeyDown(SDL_SCANCODE_SPACE); }
    bool IsDown_Minus() { return IsKeyDown(SDL_SCANCODE_MINUS); }
    bool IsDown_Equals() { return IsKeyDown(SDL_SCANCODE_EQUALS); }
    bool IsDown_Leftbracket() { return IsKeyDown(SDL_SCANCODE_LEFTBRACKET); }
    bool IsDown_Rightbracket() { return IsKeyDown(SDL_SCANCODE_RIGHTBRACKET); }
    bool IsDown_Backslash() { return IsKeyDown(SDL_SCANCODE_BACKSLASH); }
    bool IsDown_Nonushash() { return IsKeyDown(SDL_SCANCODE_NONUSHASH); }
    bool IsDown_Semicolon() { return IsKeyDown(SDL_SCANCODE_SEMICOLON); }
    bool IsDown_Apostrophe() { return IsKeyDown(SDL_SCANCODE_APOSTROPHE); }
    bool IsDown_Grave() { return IsKeyDown(SDL_SCANCODE_GRAVE); }
    bool IsDown_Comma() { return IsKeyDown(SDL_SCANCODE_COMMA); }
    bool IsDown_Period() { return IsKeyDown(SDL_SCANCODE_PERIOD); }
    bool IsDown_Slash() { return IsKeyDown(SDL_SCANCODE_SLASH); }
    bool IsDown_CapsLock() { return IsKeyDown(SDL_SCANCODE_CAPSLOCK); }
    bool IsDown_F1() { return IsKeyDown(SDL_SCANCODE_F1); }
    bool IsDown_F2() { return IsKeyDown(SDL_SCANCODE_F2); }
    bool IsDown_F3() { return IsKeyDown(SDL_SCANCODE_F3); }
    bool IsDown_F4() { return IsKeyDown(SDL_SCANCODE_F4); }
    bool IsDown_F5() { return IsKeyDown(SDL_SCANCODE_F5); }
    bool IsDown_F6() { return IsKeyDown(SDL_SCANCODE_F6); }
    bool IsDown_F7() { return IsKeyDown(SDL_SCANCODE_F7); }
    bool IsDown_F8() { return IsKeyDown(SDL_SCANCODE_F8); }
    bool IsDown_F9() { return IsKeyDown(SDL_SCANCODE_F9); }
    bool IsDown_F10() { return IsKeyDown(SDL_SCANCODE_F10); }
    bool IsDown_F11() { return IsKeyDown(SDL_SCANCODE_F11); }
    bool IsDown_F12() { return IsKeyDown(SDL_SCANCODE_F12); }
    bool IsDown_PrintScreen() { return IsKeyDown(SDL_SCANCODE_PRINTSCREEN); }
    bool IsDown_ScrollLock() { return IsKeyDown(SDL_SCANCODE_SCROLLLOCK); }
    bool IsDown_Pause() { return IsKeyDown(SDL_SCANCODE_PAUSE); }
    bool IsDown_Insert() { return IsKeyDown(SDL_SCANCODE_INSERT); }
    bool IsDown_Home() { return IsKeyDown(SDL_SCANCODE_HOME); }
    bool IsDown_PageUp() { return IsKeyDown(SDL_SCANCODE_PAGEUP); }
    bool IsDown_Delete() { return IsKeyDown(SDL_SCANCODE_DELETE); }
    bool IsDown_End() { return IsKeyDown(SDL_SCANCODE_END); }
    bool IsDown_PageDown() { return IsKeyDown(SDL_SCANCODE_PAGEDOWN); }
    bool IsDown_Right() { return IsKeyDown(SDL_SCANCODE_RIGHT); }
    bool IsDown_Left() { return IsKeyDown(SDL_SCANCODE_LEFT); }
    bool IsDown_Down() { return IsKeyDown(SDL_SCANCODE_DOWN); }
    bool IsDown_Up() { return IsKeyDown(SDL_SCANCODE_UP); }
    bool IsDown_NumLock() { return IsKeyDown(SDL_SCANCODE_NUMLOCKCLEAR); }
    bool IsDown_Kp_Divide() { return IsKeyDown(SDL_SCANCODE_KP_DIVIDE); }
    bool IsDown_Kp_Multiply() { return IsKeyDown(SDL_SCANCODE_KP_MULTIPLY); }
    bool IsDown_Kp_Minus() { return IsKeyDown(SDL_SCANCODE_KP_MINUS); }
    bool IsDown_Kp_Plus() { return IsKeyDown(SDL_SCANCODE_KP_PLUS); }
    bool IsDown_Kp_Enter() { return IsKeyDown(SDL_SCANCODE_KP_ENTER); }
    bool IsDown_Kp_1() { return IsKeyDown(SDL_SCANCODE_KP_1); }
    bool IsDown_Kp_2() { return IsKeyDown(SDL_SCANCODE_KP_2); }
    bool IsDown_Kp_3() { return IsKeyDown(SDL_SCANCODE_KP_3); }
    bool IsDown_Kp_4() { return IsKeyDown(SDL_SCANCODE_KP_4); }
    bool IsDown_Kp_5() { return IsKeyDown(SDL_SCANCODE_KP_5); }
    bool IsDown_Kp_6() { return IsKeyDown(SDL_SCANCODE_KP_6); }
    bool IsDown_Kp_7() { return IsKeyDown(SDL_SCANCODE_KP_7); }
    bool IsDown_Kp_8() { return IsKeyDown(SDL_SCANCODE_KP_8); }
    bool IsDown_Kp_9() { return IsKeyDown(SDL_SCANCODE_KP_9); }
    bool IsDown_Kp_0() { return IsKeyDown(SDL_SCANCODE_KP_0); }
    bool IsDown_Kp_Period() { return IsKeyDown(SDL_SCANCODE_KP_PERIOD); }
    bool IsDown_RBackSlash() { return IsKeyDown(SDL_SCANCODE_NONUSBACKSLASH); }
    bool IsDown_Application() { return IsKeyDown(SDL_SCANCODE_APPLICATION); }
    bool IsDown_Power() { return IsKeyDown(SDL_SCANCODE_POWER); }
    bool IsDown_Kp_Equals() { return IsKeyDown(SDL_SCANCODE_KP_EQUALS); }
    bool IsDown_Execute() { return IsKeyDown(SDL_SCANCODE_EXECUTE); }
    bool IsDown_Help() { return IsKeyDown(SDL_SCANCODE_HELP); }
    bool IsDown_Menu() { return IsKeyDown(SDL_SCANCODE_MENU); }
    bool IsDown_Select() { return IsKeyDown(SDL_SCANCODE_SELECT); }
    bool IsDown_Stop() { return IsKeyDown(SDL_SCANCODE_STOP); }
    bool IsDown_Again() { return IsKeyDown(SDL_SCANCODE_AGAIN); }
    bool IsDown_Undo() { return IsKeyDown(SDL_SCANCODE_UNDO); }
    bool IsDown_Cut() { return IsKeyDown(SDL_SCANCODE_CUT); }
    bool IsDown_Copy() { return IsKeyDown(SDL_SCANCODE_COPY); }
    bool IsDown_Paste() { return IsKeyDown(SDL_SCANCODE_PASTE); }
    bool IsDown_Find() { return IsKeyDown(SDL_SCANCODE_FIND); }
    bool IsDown_Mute() { return IsKeyDown(SDL_SCANCODE_MUTE); }
    bool IsDown_VolumeUp() { return IsKeyDown(SDL_SCANCODE_VOLUMEUP); }
    bool IsDown_VolumeDown() { return IsKeyDown(SDL_SCANCODE_VOLUMEDOWN); }
    bool IsDown_LCtrl() { return IsKeyDown(SDL_SCANCODE_LCTRL); }
    bool IsDown_LShift() { return IsKeyDown(SDL_SCANCODE_LSHIFT); }
    bool IsDown_LAlt() { return IsKeyDown(SDL_SCANCODE_LALT); }
    bool IsDown_LGui() { return IsKeyDown(SDL_SCANCODE_LGUI); }
    bool IsDown_RCtrl() { return IsKeyDown(SDL_SCANCODE_RCTRL); }
    bool IsDown_RShift() { return IsKeyDown(SDL_SCANCODE_RSHIFT); }
    bool IsDown_RAlt() { return IsKeyDown(SDL_SCANCODE_RALT); }
    bool IsDown_RGui() { return IsKeyDown(SDL_SCANCODE_RGUI); }

    // KEYBOARD Down
    bool IsUp_A() { return !IsKeyDown(SDL_SCANCODE_A); }
    bool IsUp_B() { return !IsKeyDown(SDL_SCANCODE_B); }
    bool IsUp_C() { return !IsKeyDown(SDL_SCANCODE_C); }
    bool IsUp_D() { return !IsKeyDown(SDL_SCANCODE_D); }
    bool IsUp_E() { return !IsKeyDown(SDL_SCANCODE_E); }
    bool IsUp_F() { return !IsKeyDown(SDL_SCANCODE_F); }
    bool IsUp_G() { return !IsKeyDown(SDL_SCANCODE_G); }
    bool IsUp_H() { return !IsKeyDown(SDL_SCANCODE_H); }
    bool IsUp_I() { return !IsKeyDown(SDL_SCANCODE_I); }
    bool IsUp_J() { return !IsKeyDown(SDL_SCANCODE_J); }
    bool IsUp_K() { return !IsKeyDown(SDL_SCANCODE_K); }
    bool IsUp_L() { return !IsKeyDown(SDL_SCANCODE_L); }
    bool IsUp_M() { return !IsKeyDown(SDL_SCANCODE_M); }
    bool IsUp_N() { return !IsKeyDown(SDL_SCANCODE_N); }
    bool IsUp_O() { return !IsKeyDown(SDL_SCANCODE_O); }
    bool IsUp_P() { return !IsKeyDown(SDL_SCANCODE_P); }
    bool IsUp_Q() { return !IsKeyDown(SDL_SCANCODE_Q); }
    bool IsUp_R() { return !IsKeyDown(SDL_SCANCODE_R); }
    bool IsUp_S() { return !IsKeyDown(SDL_SCANCODE_S); }
    bool IsUp_T() { return !IsKeyDown(SDL_SCANCODE_T); }
    bool IsUp_U() { return !IsKeyDown(SDL_SCANCODE_U); }
    bool IsUp_V() { return !IsKeyDown(SDL_SCANCODE_V); }
    bool IsUp_W() { return !IsKeyDown(SDL_SCANCODE_W); }
    bool IsUp_X() { return !IsKeyDown(SDL_SCANCODE_X); }
    bool IsUp_Y() { return !IsKeyDown(SDL_SCANCODE_Y); }
    bool IsUp_Z() { return !IsKeyDown(SDL_SCANCODE_Z); }
    bool IsUp_1() { return !IsKeyDown(SDL_SCANCODE_1); }
    bool IsUp_2() { return !IsKeyDown(SDL_SCANCODE_2); }
    bool IsUp_3() { return !IsKeyDown(SDL_SCANCODE_3); }
    bool IsUp_4() { return !IsKeyDown(SDL_SCANCODE_4); }
    bool IsUp_5() { return !IsKeyDown(SDL_SCANCODE_5); }
    bool IsUp_6() { return !IsKeyDown(SDL_SCANCODE_6); }
    bool IsUp_7() { return !IsKeyDown(SDL_SCANCODE_7); }
    bool IsUp_8() { return !IsKeyDown(SDL_SCANCODE_8); }
    bool IsUp_9() { return !IsKeyDown(SDL_SCANCODE_9); }
    bool IsUp_0() { return !IsKeyDown(SDL_SCANCODE_0); }
    bool IsUp_Return() { return !IsKeyDown(SDL_SCANCODE_RETURN); }
    bool IsUp_Escape() { return !IsKeyDown(SDL_SCANCODE_ESCAPE); }
    bool IsUp_Backspace() { return !IsKeyDown(SDL_SCANCODE_BACKSPACE); }
    bool IsUp_Tab() { return !IsKeyDown(SDL_SCANCODE_TAB); }
    bool IsUp_Space() { return !IsKeyDown(SDL_SCANCODE_SPACE); }
    bool IsUp_Minus() { return !IsKeyDown(SDL_SCANCODE_MINUS); }
    bool IsUp_Equals() { return !IsKeyDown(SDL_SCANCODE_EQUALS); }
    bool IsUp_Leftbracket() { return !IsKeyDown(SDL_SCANCODE_LEFTBRACKET); }
    bool IsUp_Rightbracket() { return !IsKeyDown(SDL_SCANCODE_RIGHTBRACKET); }
    bool IsUp_Backslash() { return !IsKeyDown(SDL_SCANCODE_BACKSLASH); }
    bool IsUp_Nonushash() { return !IsKeyDown(SDL_SCANCODE_NONUSHASH); }
    bool IsUp_Semicolon() { return !IsKeyDown(SDL_SCANCODE_SEMICOLON); }
    bool IsUp_Apostrophe() { return !IsKeyDown(SDL_SCANCODE_APOSTROPHE); }
    bool IsUp_Grave() { return !IsKeyDown(SDL_SCANCODE_GRAVE); }
    bool IsUp_Comma() { return !IsKeyDown(SDL_SCANCODE_COMMA); }
    bool IsUp_Period() { return !IsKeyDown(SDL_SCANCODE_PERIOD); }
    bool IsUp_Slash() { return !IsKeyDown(SDL_SCANCODE_SLASH); }
    bool IsUp_CapsLock() { return !IsKeyDown(SDL_SCANCODE_CAPSLOCK); }
    bool IsUp_F1() { return !IsKeyDown(SDL_SCANCODE_F1); }
    bool IsUp_F2() { return !IsKeyDown(SDL_SCANCODE_F2); }
    bool IsUp_F3() { return !IsKeyDown(SDL_SCANCODE_F3); }
    bool IsUp_F4() { return !IsKeyDown(SDL_SCANCODE_F4); }
    bool IsUp_F5() { return !IsKeyDown(SDL_SCANCODE_F5); }
    bool IsUp_F6() { return !IsKeyDown(SDL_SCANCODE_F6); }
    bool IsUp_F7() { return !IsKeyDown(SDL_SCANCODE_F7); }
    bool IsUp_F8() { return !IsKeyDown(SDL_SCANCODE_F8); }
    bool IsUp_F9() { return !IsKeyDown(SDL_SCANCODE_F9); }
    bool IsUp_F10() { return !IsKeyDown(SDL_SCANCODE_F10); }
    bool IsUp_F11() { return !IsKeyDown(SDL_SCANCODE_F11); }
    bool IsUp_F12() { return !IsKeyDown(SDL_SCANCODE_F12); }
    bool IsUp_PrintScreen() { return !IsKeyDown(SDL_SCANCODE_PRINTSCREEN); }
    bool IsUp_ScrollLock() { return !IsKeyDown(SDL_SCANCODE_SCROLLLOCK); }
    bool IsUp_Pause() { return !IsKeyDown(SDL_SCANCODE_PAUSE); }
    bool IsUp_Insert() { return !IsKeyDown(SDL_SCANCODE_INSERT); }
    bool IsUp_Home() { return !IsKeyDown(SDL_SCANCODE_HOME); }
    bool IsUp_PageUp() { return !IsKeyDown(SDL_SCANCODE_PAGEUP); }
    bool IsUp_Delete() { return !IsKeyDown(SDL_SCANCODE_DELETE); }
    bool IsUp_End() { return !IsKeyDown(SDL_SCANCODE_END); }
    bool IsUp_PageDown() { return !IsKeyDown(SDL_SCANCODE_PAGEDOWN); }
    bool IsUp_Right() { return !IsKeyDown(SDL_SCANCODE_RIGHT); }
    bool IsUp_Left() { return !IsKeyDown(SDL_SCANCODE_LEFT); }
    bool IsUp_Down() { return !IsKeyDown(SDL_SCANCODE_DOWN); }
    bool IsUp_Up() { return !IsKeyDown(SDL_SCANCODE_UP); }
    bool IsUp_NumLock() { return !IsKeyDown(SDL_SCANCODE_NUMLOCKCLEAR); }
    bool IsUp_Kp_Divide() { return !IsKeyDown(SDL_SCANCODE_KP_DIVIDE); }
    bool IsUp_Kp_Multiply() { return !IsKeyDown(SDL_SCANCODE_KP_MULTIPLY); }
    bool IsUp_Kp_Minus() { return !IsKeyDown(SDL_SCANCODE_KP_MINUS); }
    bool IsUp_Kp_Plus() { return !IsKeyDown(SDL_SCANCODE_KP_PLUS); }
    bool IsUp_Kp_Enter() { return !IsKeyDown(SDL_SCANCODE_KP_ENTER); }
    bool IsUp_Kp_1() { return !IsKeyDown(SDL_SCANCODE_KP_1); }
    bool IsUp_Kp_2() { return !IsKeyDown(SDL_SCANCODE_KP_2); }
    bool IsUp_Kp_3() { return !IsKeyDown(SDL_SCANCODE_KP_3); }
    bool IsUp_Kp_4() { return !IsKeyDown(SDL_SCANCODE_KP_4); }
    bool IsUp_Kp_5() { return !IsKeyDown(SDL_SCANCODE_KP_5); }
    bool IsUp_Kp_6() { return !IsKeyDown(SDL_SCANCODE_KP_6); }
    bool IsUp_Kp_7() { return !IsKeyDown(SDL_SCANCODE_KP_7); }
    bool IsUp_Kp_8() { return !IsKeyDown(SDL_SCANCODE_KP_8); }
    bool IsUp_Kp_9() { return !IsKeyDown(SDL_SCANCODE_KP_9); }
    bool IsUp_Kp_0() { return !IsKeyDown(SDL_SCANCODE_KP_0); }
    bool IsUp_Kp_Period() { return !IsKeyDown(SDL_SCANCODE_KP_PERIOD); }
    bool IsUp_RBackSlash() { return !IsKeyDown(SDL_SCANCODE_NONUSBACKSLASH); }
    bool IsUp_Application() { return !IsKeyDown(SDL_SCANCODE_APPLICATION); }
    bool IsUp_Power() { return !IsKeyDown(SDL_SCANCODE_POWER); }
    bool IsUp_Kp_Equals() { return !IsKeyDown(SDL_SCANCODE_KP_EQUALS); }
    bool IsUp_Execute() { return !IsKeyDown(SDL_SCANCODE_EXECUTE); }
    bool IsUp_Help() { return !IsKeyDown(SDL_SCANCODE_HELP); }
    bool IsUp_Menu() { return !IsKeyDown(SDL_SCANCODE_MENU); }
    bool IsUp_Select() { return !IsKeyDown(SDL_SCANCODE_SELECT); }
    bool IsUp_Stop() { return !IsKeyDown(SDL_SCANCODE_STOP); }
    bool IsUp_Again() { return !IsKeyDown(SDL_SCANCODE_AGAIN); }
    bool IsUp_Undo() { return !IsKeyDown(SDL_SCANCODE_UNDO); }
    bool IsUp_Cut() { return !IsKeyDown(SDL_SCANCODE_CUT); }
    bool IsUp_Copy() { return !IsKeyDown(SDL_SCANCODE_COPY); }
    bool IsUp_Paste() { return !IsKeyDown(SDL_SCANCODE_PASTE); }
    bool IsUp_Find() { return !IsKeyDown(SDL_SCANCODE_FIND); }
    bool IsUp_Mute() { return !IsKeyDown(SDL_SCANCODE_MUTE); }
    bool IsUp_VolumeUp() { return !IsKeyDown(SDL_SCANCODE_VOLUMEUP); }
    bool IsUp_VolumeDown() { return !IsKeyDown(SDL_SCANCODE_VOLUMEDOWN); }
    bool IsUp_LCtrl() { return !IsKeyDown(SDL_SCANCODE_LCTRL); }
    bool IsUp_LShift() { return !IsKeyDown(SDL_SCANCODE_LSHIFT); }
    bool IsUp_LAlt() { return !IsKeyDown(SDL_SCANCODE_LALT); }
    bool IsUp_LGui() { return !IsKeyDown(SDL_SCANCODE_LGUI); }
    bool IsUp_RCtrl() { return !IsKeyDown(SDL_SCANCODE_RCTRL); }
    bool IsUp_RShift() { return !IsKeyDown(SDL_SCANCODE_RSHIFT); }
    bool IsUp_RAlt() { return !IsKeyDown(SDL_SCANCODE_RALT); }
    bool IsUp_RGui() { return !IsKeyDown(SDL_SCANCODE_RGUI); }
};